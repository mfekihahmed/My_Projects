<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>Multi-path vTopology</title>

    <style>
      body {font: 10pt arial;}
    </style>
                                                                        
    <script type="text/javascript" src="http://www.google.com/jsapi"></script>
    <script type="text/javascript" src="../network.js"></script>
    
    <script type="text/javascript">
      var nodesTable = null;
      var linksTable = null;
      var network = null;

      var DIR = 'img/opennms/';

      google.load('visualization', '1');
      
      // Set callback to run when API is loaded
      google.setOnLoadCallback(drawVisualization); 

      // Called when the Visualization API is loaded.
      function drawVisualization() {
        // Create a data table with nodes.
        nodesTable = new google.visualization.DataTable();
        nodesTable.addColumn('number', 'id');
        nodesTable.addColumn('string', 'text');   // optional
        nodesTable.addColumn('string', 'image');  // optional
        nodesTable.addColumn('string', 'style');   // optional
        
        // Create a data table with links.
        linksTable = new google.visualization.DataTable();
        linksTable.addColumn('number', 'from');
        linksTable.addColumn('number', 'to');
        linksTable.addColumn('number', 'length'); // optional
        var length1 = 350;
        var length2 = 150;
        var length3 = 100;
        var length4 = 75;
        var length5 = 40;
        nodesTable.addRow([1, 'Internet', DIR + 'internet.png', 'image']);
        nodesTable.addRow([2, 'Multi-path Controller', DIR + 'nox.png', 'image']);
        nodesTable.addRow([3, 'EBS Hardware Switches', DIR + 'switch.png', 'image']);
        linksTable.addRow([1, 3, length1]);
        linksTable.addRow([2, 3, length1]);
        
        /*for (var i = 4; i <= 7; i++) {
          nodesTable.addRow([i, 'Computer', DIR + 'Hardware-My-Computer-3-icon.png', 'image']);
          linksTable.addRow([2, i, lengthSub]);
        }*/
        nodesTable.addRow([4, 'EBS 1', DIR + 'host.png', 'image']);
        nodesTable.addRow([5, 'EBS 2', DIR + 'host.png', 'image']);
        nodesTable.addRow([6, 'EBS 2', DIR + 'host.png', 'image']);
        nodesTable.addRow([7, 'EBS 3', DIR + 'host.png', 'image']); 
        linksTable.addRow([3, 4, length2]);
        linksTable.addRow([3, 5, length2]);
        linksTable.addRow([3, 6, length2]);
        linksTable.addRow([3, 7, length2]);



        nodesTable.addRow([8, 'Open vSwitch 1', DIR + 'ovs.png', 'image']);
        nodesTable.addRow([9, 'Open vSwitch 2', DIR + 'ovs.png', 'image']);
        nodesTable.addRow([10, 'Open vSwitch 3', DIR + 'ovs.png', 'image']);
        nodesTable.addRow([11, 'Open vSwitch 4', DIR + 'ovs.png', 'image']);
        nodesTable.addRow([12, 'Open vSwitch 5', DIR + 'ovs.png', 'image']);
        nodesTable.addRow([13, 'Open vSwitch 6', DIR + 'ovs.png', 'image']);
        nodesTable.addRow([14, 'Open vSwitch 7', DIR + 'ovs.png', 'image']);
        nodesTable.addRow([15, 'Open vSwitch 8', DIR + 'ovs.png', 'image']);
        linksTable.addRow([4, 8, length3]);
        linksTable.addRow([4, 9, length3]);
        linksTable.addRow([4, 10, length3]);
        linksTable.addRow([4, 11, length3]);
        linksTable.addRow([4, 12, length3]);
        linksTable.addRow([4, 13, length3]);
        linksTable.addRow([4, 14, length3]);
        linksTable.addRow([4, 15, length3]);
        

        // specify options
        var options = {
          'width': '900px', 
          'height': '700px',
          'stabilize': false   // stabilize positions before displaying
        };

        // Instantiate our graph object.
        network = new links.Network(document.getElementById('multipath'));

        // Draw our graph with the created data and options 
        network.draw(nodesTable, linksTable, options);
      }
    </script>
  </head>

  <body>
    <div id="multipath"></div>
  </body>
</html>
